import type { Metrics, MetaMetrics } from '@/types/metrics'

export function transformToMetaMetrics(metrics: Metrics): MetaMetrics {
  return {
    totalSales: metrics.totalSales || 0,
    salesGrowth: metrics.salesGrowth || 0,
    averageOrderValue: metrics.averageOrderValue || 0,
    aovGrowth: metrics.aovGrowth || 0,
    ordersPlaced: metrics.ordersPlaced || 0,
    ordersGrowth: metrics.ordersGrowth || 0,
    impressions: metrics.impressions || 0,
    impressionGrowth: metrics.impressionGrowth || 0,
    clicks: metrics.clicks || 0,
    clickGrowth: metrics.clickGrowth || 0,
    conversions: metrics.conversions || 0,
    conversionGrowth: metrics.conversionGrowth || 0,
    adSpend: metrics.adSpend || 0,
    adSpendGrowth: metrics.adSpendGrowth || 0,
    unitsGrowth: metrics.unitsGrowth || 0,
    retentionGrowth: metrics.retentionGrowth || 0,
    dailyData: metrics.dailyData || [],
    chartData: metrics.chartData || [],
    timeseriesData: metrics.timeseriesData || [],
    unitsSold: metrics.unitsSold || 0,
    conversionRate: metrics.conversionRate || 0,
    customerRetentionRate: metrics.customerRetentionRate || 0,
    returnRate: metrics.returnRate || 0,
    inventoryLevels: metrics.inventoryLevels || 0,
    inventoryGrowth: 0,
    topProducts: metrics.topProducts || [],
    returnGrowth: metrics.returnGrowth || 0,
    roas: metrics.roas || 0,
    roasGrowth: metrics.roasGrowth || 0,
    ctr: metrics.ctr || 0,
    ctrGrowth: metrics.ctrGrowth || 0,
    cpc: metrics.cpc || 0,
    cpcGrowth: metrics.cpcGrowth || 0,
    costPerResult: metrics.costPerResult || 0,
    cprGrowth: metrics.cprGrowth || 0,
  }
}
